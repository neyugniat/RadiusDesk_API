openapi: 3.0.0  # Make sure to specify OpenAPI version 3.0
info:
  title: "API Documentation"
  description: "Comprehensive documentation for all API calls."
  version: "1.0.0"
servers:
  - url: "http://localhost/cake4/rd_cake"
paths:

# ==========PROFILES APIS===============#
  #OK
  /profiles/index.json:
    get:
      tags:
        - "Profile API"
      summary: "View all profiles"
      parameters:
        - name: "_dc"
          in: "query"
          description: "Cache buster parameter"
          required: true
          schema:
            type: "string"
            example: "1737162772783"
        - name: "page"
          in: "query"
          description: "Page number"
          required: true
          schema:
            type: "integer"
            example: 1
        - name: "start"
          in: "query"
          description: "Starting index of profiles"
          required: true
          schema:
            type: "integer"
            example: 0
        - name: "limit"
          in: "query"
          description: "Limit the number of profiles returned"
          required: true
          schema:
            type: "integer"
            example: 100
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud identifier"
          required: true
          schema:
            type: "integer"
            example: 23
      responses:
        200:
          description: "Successfully retrieved the profiles list"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  totalCount:
                    type: integer
                    example: 6
                  metaData:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 6
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 59
                        name:
                          type: string
                          example: "new_profile"
                        for_system:
                          type: boolean
                          example: false
                        profile_components:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 63
                              username:
                                type: string
                                example: "new_profile"
                              groupname:
                                type: string
                                example: "SimpleAdd_59"
                              priority:
                                type: integer
                                example: 5
                        data_cap_in_profile:
                          type: boolean
                          example: false
                        time_cap_in_profile:
                          type: boolean
                          example: false
                        update:
                          type: boolean
                          example: true
                        delete:
                          type: boolean
                          example: true
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK        
  /profiles/simple_add.json:
    post:
      tags:
        - "Profile API"
      summary: "Add a simple profile"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                id:
                  type: "string"
                  example: ""
                  readOnly: true
                  description: "ID of the profile (disabled field)"
                name:
                  type: "string"
                  example: "123"
                data_limit_enabled:
                  type: "string"
                  example: "false"
                data_amount:
                  type: "string"
                  example: "1"
                numberfield-2585-inputEl:
                  type: "string"
                  example: "1"
                data_unit:
                  type: "string"
                  example: "gb"
                data_reset:
                  type: "string"
                  example: "daily"
                data_cap:
                  type: "string"
                  example: "hard"
                time_limit_enabled:
                  type: "string"
                  example: "false"
                time_amount:
                  type: "string"
                  example: "1"
                numberfield-2605-inputEl:
                  type: "string"
                  example: "1"
                time_unit:
                  type: "string"
                  example: "hour"
                time_reset:
                  type: "string"
                  example: "daily"
                time_cap:
                  type: "string"
                  example: "hard"
                speed_limit_enabled:
                  type: "string"
                  example: "false"
                speed_upload_amount:
                  type: "string"
                  example: "1"
                numberfield-2626-inputEl:
                  type: "string"
                  example: "1"
                speed_upload_unit:
                  type: "string"
                  example: "mbps"
                speed_download_amount:
                  type: "string"
                  example: "1"
                numberfield-2631-inputEl:
                  type: "string"
                  example: "1"
                speed_download_unit:
                  type: "string"
                  example: "mbps"
                logintime_1_span:
                  type: "string"
                  example: "disabled"
                logintime_2_span:
                  type: "string"
                  example: "disabled"
                logintime_3_span:
                  type: "string"
                  example: "disabled"
                session_limit_enabled:
                  type: "string"
                  example: "false"
                session_limit:
                  type: "string"
                  example: "1"
                adv_data_limit_enabled:
                  type: "string"
                  example: "false"
                adv_data_amount:
                  type: "string"
                  example: "1"
                numberfield-2700-inputEl:
                  type: "string"
                  example: "1"
                adv_data_unit:
                  type: "string"
                  example: "gb"
                numberfield-2703-inputEl:
                  type: "string"
                  example: "1"
                adv_data_per_day:
                  type: "string"
                  example: "1"
                numberfield-2707-inputEl:
                  type: "string"
                  example: "1"
                adv_data_per_month:
                  type: "string"
                  example: "1"
                adv_time_limit_enabled:
                  type: "string"
                  example: "false"
                adv_time_amount:
                  type: "string"
                  example: "1"
                numberfield-2717-inputEl:
                  type: "string"
                  example: "1"
                adv_time_unit:
                  type: "string"
                  example: "hour"
                numberfield-2720-inputEl:
                  type: "string"
                  example: "1"
                adv_time_per_day:
                  type: "string"
                  example: "1"
                numberfield-2724-inputEl:
                  type: "string"
                  example: "1"
                adv_time_per_month:
                  type: "string"
                  example: "1"
                token:
                  type: "string"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: "string"
                  example: "4_4"
                cloud_id:
                  type: "string"
                  example: "23"
      responses:
        200:
          description: "Profile added successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK
  /profiles/simple_view.json:
    get:
      tags:
        - "Profile API"
      summary: "View simple profile details"
      parameters:
        - name: "_dc"
          in: "query"
          description: "Cache buster parameter"
          required: true
          schema:
            type: "string"
            example: "1737162772783"
        - name: "profile_id"
          in: "query"
          description: "Profile ID to view"
          required: true
          schema:
            type: "integer"
            example: 54
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud ID"
          required: true
          schema:
            type: "integer"
            example: 23
      responses:
        200:
          description: "Profile details successfully retrieved"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  profile_id:
                    type: "integer"
                    example: 54
                  name:
                    type: "string"
                    example: "WLAN_20"
                  data_limit_enabled:
                    type: "boolean"
                    example: false
                  # Add additional properties as needed
        400:
          description: "Bad request"
        404:
          description: "Profile not found"
        500:
          description: "Internal server error"
  #OK
  /profiles/simple_edit.json:
    post:
      tags:
        - "Profile API"
      summary: "Edit simple profile details"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Profile ID to edit"
                  example: "53"
                name:
                  type: "string"
                  description: "Profile name"
                  example: "WLAN_10-edited"
                data_limit_enabled:
                  type: "boolean"
                  description: "Enable or disable data limit"
                  example: false
                data_amount:
                  type: "integer"
                  description: "Amount of data allowed"
                  example: 1
                data_unit:
                  type: "string"
                  description: "Unit of data (e.g., GB, MB)"
                  example: "gb"
                data_reset:
                  type: "string"
                  description: "Frequency of data reset"
                  example: "daily"
                data_cap:
                  type: "string"
                  description: "Data cap type"
                  example: "hard"
                time_limit_enabled:
                  type: "boolean"
                  description: "Enable or disable time limit"
                  example: false
                time_amount:
                  type: "integer"
                  description: "Time limit amount"
                  example: 1
                time_unit:
                  type: "string"
                  description: "Time unit (e.g., hour, minute)"
                  example: "hour"
                time_reset:
                  type: "string"
                  description: "Frequency of time reset"
                  example: "daily"
                time_cap:
                  type: "string"
                  description: "Time cap type"
                  example: "hard"
                speed_limit_enabled:
                  type: "boolean"
                  description: "Enable or disable speed limit"
                  example: false
                speed_upload_amount:
                  type: "integer"
                  description: "Upload speed amount"
                  example: 1
                speed_upload_unit:
                  type: "string"
                  description: "Upload speed unit"
                  example: "mbps"
                speed_download_amount:
                  type: "integer"
                  description: "Download speed amount"
                  example: 1
                speed_download_unit:
                  type: "string"
                  description: "Download speed unit"
                  example: "mbps"
                logintime_1_span:
                  type: "string"
                  description: "Login time span"
                  example: "disabled"
                logintime_2_span:
                  type: "string"
                  description: "Login time span"
                  example: "disabled"
                logintime_3_span:
                  type: "string"
                  description: "Login time span"
                  example: "disabled"
                session_limit_enabled:
                  type: "boolean"
                  description: "Enable or disable session limit"
                  example: false
                session_limit:
                  type: "integer"
                  description: "Session limit"
                  example: 1
                adv_data_limit_enabled:
                  type: "boolean"
                  description: "Enable or disable advanced data limit"
                  example: false
                adv_data_amount:
                  type: "integer"
                  description: "Advanced data amount"
                  example: 1
                adv_data_unit:
                  type: "string"
                  description: "Advanced data unit"
                  example: "gb"
                adv_data_per_day:
                  type: "integer"
                  description: "Advanced data per day"
                  example: 1
                adv_data_per_month:
                  type: "integer"
                  description: "Advanced data per month"
                  example: 1
                adv_time_limit_enabled:
                  type: "boolean"
                  description: "Enable or disable advanced time limit"
                  example: false
                adv_time_amount:
                  type: "integer"
                  description: "Advanced time amount"
                  example: 1
                adv_time_unit:
                  type: "string"
                  description: "Advanced time unit"
                  example: "hour"
                adv_time_per_day:
                  type: "integer"
                  description: "Advanced time per day"
                  example: 1
                adv_time_per_month:
                  type: "integer"
                  description: "Advanced time per month"
                  example: 1
                token:
                  type: "string"
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: "string"
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: "string"
                  description: "Cloud ID"
                  example: "23"
      responses:
        200:
          description: "Profile updated successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK
  /profiles/manage-components.json:
    post:
      tags:
        - "Profile API"
      summary: "Manage components for a profile"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                profile_id:
                  type: "string"
                  description: "Profile ID"
                  example: "73"
                rb:
                  type: "string"
                  description: "Action to perform (add or remove)"
                  enum: ["remove", "add"]
                  example: "remove"
                component_id:
                  type: "string"
                  description: "Component ID"
                  example: "55"
                priority:
                  type: "string"
                  description: "Priority of the component"
                  example: "5"
                token:
                  type: "string"
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: "string"
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: "string"
                  description: "Cloud ID"
                  example: "23"
              required:
                - profile_id
                - rb
                - component_id
                - token
                - sel_language
                - cloud_id
            examples:
              remove:
                summary: "Remove a profile component"
                value:
                  profile_id: "73"
                  rb: "remove"
                  component_id: "55"
                  token: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                  sel_language: "4_4"
                  cloud_id: "23"
              add:
                summary: "Add a profile component"
                value:
                  profile_id: "73"
                  rb: "add"
                  component_id: "55"
                  priority: "5"
                  token: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                  sel_language: "4_4"
                  cloud_id: "23"
      responses:
        200:
          description: "Components managed successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #ok
  /profiles/delete.json:
    post:
      tags:
        - "Profile API"
      summary: "Delete a profile"
      parameters:
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud ID"
          required: true
          schema:
            type: "integer"
            example: 23
      requestBody:
        description: "Profile details to be deleted"
        required: true
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 54
      responses:
        200:
          description: "Profile deleted successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK        
  /profiles/index-ap.json:
    get:
      tags:
        - "Profile API"
      summary: "Retrieve a list of profiles"
      description: "Fetch a paginated list of profiles based on the specified query parameters."
      parameters:
        - name: "_dc"
          in: "query"
          description: "Timestamp for cache busting"
          required: false
          schema:
            type: "integer"
            example: 1737172100590
        - name: "page"
          in: "query"
          description: "Page number for pagination"
          required: true
          schema:
            type: "integer"
            example: 1
        - name: "start"
          in: "query"
          description: "Start index for pagination"
          required: true
          schema:
            type: "integer"
            example: 0
        - name: "limit"
          in: "query"
          description: "Number of items to return per page"
          required: true
          schema:
            type: "integer"
            example: 25
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud ID"
          required: true
          schema:
            type: "integer"
            example: 23
      responses:
        200:
          description: "List of profiles retrieved successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  items:
                    type: "array"
                    description: "List of profiles"
                    items:
                      type: "object"
                      properties:
                        id:
                          type: "integer"
                          description: "Unique identifier for the profile"
                          example: 70
                        name:
                          type: "string"
                          description: "Name of the profile"
                          example: "123"
                        data_cap_in_profile:
                          type: "boolean"
                          description: "Indicates if the profile includes a data cap"
                          example: false
                        time_cap_in_profile:
                          type: "boolean"
                          description: "Indicates if the profile includes a time cap"
                          example: false
                        for_system:
                          type: "boolean"
                          description: "Indicates if the profile is for system use"
                          example: false
                  success:
                    type: "boolean"
                    description: "Indicates whether the API call was successful"
                    example: true
              examples:
                success:
                  summary: "Example response for a successful API call"
                  value:
                    items:
                      - id: 70
                        name: "123"
                        data_cap_in_profile: false
                        time_cap_in_profile: false
                        for_system: false
                      - id: 46
                        name: "neyugniat-cloud"
                        data_cap_in_profile: false
                        time_cap_in_profile: false
                        for_system: false
                      - id: 58
                        name: "test"
                        data_cap_in_profile: false
                        time_cap_in_profile: false
                        for_system: true
                      - id: 50
                        name: "VLAN_10"
                        data_cap_in_profile: false
                        time_cap_in_profile: false
                        for_system: false
                      - id: 51
                        name: "VLAN_20"
                        data_cap_in_profile: false
                        time_cap_in_profile: false
                        for_system: true
                    success: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
          
# ==========ADMIN USERS APIS===============#    
  #OK
  /access-providers/index.json:
    get:
      tags:
        - "Admin Users API"
      summary: "Retrieve a list of admin users"
      parameters:
        - name: "_dc"
          in: "query"
          description: "Cache-busting parameter"
          required: true
          schema:
            type: "integer"
            example: 1737164392915
        - name: "page"
          in: "query"
          description: "Page number"
          required: true
          schema:
            type: "integer"
            example: 1
        - name: "start"
          in: "query"
          description: "Start index"
          required: true
          schema:
            type: "integer"
            example: 0
        - name: "limit"
          in: "query"
          description: "Number of items per page"
          required: true
          schema:
            type: "integer"
            example: 100
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud ID"
          required: true
          schema:
            type: "integer"
            example: 23
      responses:
        200:
          description: "List of access providers"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
                  totalCount:
                    type: "integer"
                    example: 5
                  items:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        id:
                          type: "integer"
                          example: 51
                        username:
                          type: "string"
                          example: "neyugniat"
                        password:
                          type: "string"
                          example: "90748917cba97b2385961f8bf7ec525dc5722806"
                        token:
                          type: "string"
                          example: "b4403bd5-39e9-4f58-bd66-552c79609c23"
                        name:
                          type: "string"
                          example: ""
                        surname:
                          type: "string"
                          example: ""
                        address:
                          type: "string"
                          example: ""
                        phone:
                          type: "string"
                          example: ""
                        email:
                          type: "string"
                          example: ""
                        active:
                          type: "boolean"
                          example: true
                        country_id:
                          type: "integer"
                          example: 4
                        group_id:
                          type: "integer"
                          example: 9
                        language_id:
                          type: "integer"
                          example: 4
                        created:
                          type: "string"
                          format: "date-time"
                          example: "2024-12-13T12:42:49+00:00"
                        created_in_words:
                          type: "string"
                          example: "1 month ago"
                        modified:
                          type: "string"
                          format: "date-time"
                          example: "2024-12-13T12:42:49+00:00"
                        modified_in_words:
                          type: "string"
                          example: "1 month ago"
                        timezone_id:
                          type: "integer"
                          example: 316
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK
  /access-providers/add.json:
    post:
      tags:
        - "Admin Users API"
      summary: "Add a new admin user"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                  description: "Username for the access provider"
                  example: "moitaone"
                password:
                  type: "string"
                  description: "Password for the access provider"
                  example: "123"
                language:
                  type: "string"
                  description: "Language for the access provider"
                  example: "4_4"
                active:
                  type: "string"
                  description: "Status of the access provider (active or inactive)"
                  example: "active"
                name:
                  type: "string"
                  description: "Name of the access provider"
                  example: ""
                surname:
                  type: "string"
                  description: "Surname of the access provider"
                  example: ""
                phone:
                  type: "string"
                  description: "Phone number of the access provider"
                  example: ""
                email:
                  type: "string"
                  description: "Email of the access provider"
                  example: ""
                address:
                  type: "string"
                  description: "Address of the access provider"
                  example: ""
                token:
                  type: "string"
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: "string"
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: "integer"
                  description: "Cloud ID"
                  example: 23
                file:
                  type: "string"
                  format: "binary"
                  description: "Optional file to upload"
      responses:
        200:
          description: "Access provider added successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK        
  /access-providers/view.json:
    get:
      tags:
        - "Admin Users API"
      summary: "View details of an admin user"
      parameters:
        - name: "_dc"
          in: "query"
          description: "Cache-busting parameter"
          required: true
          schema:
            type: "integer"
            example: 1737164550246
        - name: "ap_id"
          in: "query"
          description: "Access provider ID"
          required: true
          schema:
            type: "integer"
            example: 70
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud ID"
          required: true
          schema:
            type: "integer"
            example: 23
      responses:
        200:
          description: "Access provider details retrieved successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
                  data:
                    type: "object"
                    properties:
                      id:
                        type: "integer"
                        example: 72
                      username:
                        type: "string"
                        example: "moitaone"
                      name:
                        type: "string"
                        example: ""
                      surname:
                        type: "string"
                        example: ""
                      phone:
                        type: "string"
                        example: ""
                      address:
                        type: "string"
                        example: ""
                      email:
                        type: "string"
                        example: ""
                      active:
                        type: "boolean"
                        example: true
                      language:
                        type: "string"
                        example: "4_4"
                      timezone_id:
                        type: "integer"
                        example: 316
                      api_key:
                        type: "string"
                        example: "c99ec288-308f-4f30-9c47-aead23b714b3"
                      alert_activate:
                        type: "integer"
                        example: 0
                      alert_frequency:
                        type: "integer"
                        example: 1
                      wl_active:
                        type: "boolean"
                        example: true
                      wl_header:
                        type: "string"
                        example: "RADIUSdesk"
                      wl_h_bg:
                        type: "string"
                        example: "ffffff"
                      wl_h_fg:
                        type: "string"
                        example: "005691"
                      wl_footer:
                        type: "string"
                        example: "RADIUSdesk 2022"
                      wl_img_active:
                        type: "boolean"
                        example: true
                      wl_img_file:
                        type: "string"
                        example: "logo.png"
                      wl_img:
                        type: "string"
                        example: "/cake4/rd_cake/img/access_providers/logo.png"
                      wl_wallpaper:
                        type: "string"
                        example: "/cake4/rd_cake/img/wallpapers/1.jpg"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Access provider not found"
        500:
          description: "Internal server error"
  #OK        
  /access-providers/edit.json:
    post:
      tags:
        - "Admin Users API"
      summary: "Edit an admin user's details"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                id:
                  type: "integer"
                  example: 70
                username:
                  type: "string"
                  example: "moitaone"
                language:
                  type: "string"
                  example: "4_4"
                timezone_id:
                  type: "integer"
                  example: 221
                active:
                  type: "string"
                  example: "active"
                name:
                  type: "string"
                  example: ""
                surname:
                  type: "string"
                  example: ""
                phone:
                  type: "string"
                  example: ""
                email:
                  type: "string"
                  example: ""
                address:
                  type: "string"
                  example: ""
                wl_active:
                  type: "string"
                  example: "wl_active"
                wl_header:
                  type: "string"
                  example: "RADIUSdesk"
                wl_h_bg:
                  type: "string"
                  example: "ffffff"
                wl_h_fg:
                  type: "string"
                  example: "005691"
                wl_footer:
                  type: "string"
                  example: "RADIUSdesk 2022"
                wl_img_active:
                  type: "string"
                  example: "wl_img_active"
                wl_img_file:
                  type: "string"
                  example: "logo.png"
                wl_img_file_upload:
                  type: "string"
                  example: ""
                token:
                  type: "string"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: "string"
                  example: "4_4"
                cloud_id:
                  type: "integer"
                  example: 23
      responses:
        200:
          description: "Access provider details updated successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Access provider not found"
        500:
          description: "Internal server error"
  #OK
  /access-providers/delete.json:
    post:
      tags:
        - "Admin Users API"
      summary: "Delete an access provider"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 70
      responses:
        200:
          description: "Access provider deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 70
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Access provider not found"
        500:
          description: "Internal server error"

# ==========REALMS APIS===============#
  #OK
  /realms/index.json:
    get:
      tags:
        - "Realms API"
      summary: "View all realms"
      parameters:
        - name: "_dc"
          in: "query"
          description: "Timestamp (or cache buster)"
          required: true
          schema:
            type: "string"
            example: "1737203426459"
        - name: "page"
          in: "query"
          description: "Page number for pagination"
          required: true
          schema:
            type: "integer"
            example: 1
        - name: "start"
          in: "query"
          description: "Start index for pagination"
          required: true
          schema:
            type: "integer"
            example: 0
        - name: "limit"
          in: "query"
          description: "Number of records to return per page"
          required: true
          schema:
            type: "integer"
            example: 100
        - name: "sort"
          in: "query"
          description: "Field to sort by"
          required: true
          schema:
            type: "string"
            example: "name"
        - name: "dir"
          in: "query"
          description: "Sort direction"
          required: true
          schema:
            type: "string"
            enum: ["ASC", "DESC"]
            example: "DESC"
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud ID"
          required: true
          schema:
            type: "string"
            example: "23"
      responses:
        200:
          description: "List of realms"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: true
                  totalCount:
                    type: "integer"
                    example: 2
                  metaData:
                    type: "object"
                    properties:
                      total:
                        type: "integer"
                        example: 2
                  items:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        id:
                          type: "integer"
                          example: 20
                        name:
                          type: "string"
                          example: "test.com"
                        icon_file_name:
                          type: "string"
                          example: "logo.png"
                        phone:
                          type: "string"
                          example: ""
                        cell:
                          type: "string"
                          example: ""
                        email:
                          type: "string"
                          example: ""
                        url:
                          type: "string"
                          example: ""
                        street_no:
                          type: "string"
                          example: ""
                        street:
                          type: "string"
                          example: ""
                        town_suburb:
                          type: "string"
                          example: ""
                        city:
                          type: "string"
                          example: ""
                        country:
                          type: "string"
                          example: ""
                        lat:
                          type: "number"
                          example: 0
                        lon:
                          type: "number"
                          example: 0
                        cloud_id:
                          type: "integer"
                          example: 23
                        created:
                          type: "string"
                          example: "2024-12-26T03:38:09+00:00"
                        created_in_words:
                          type: "string"
                          example: "3 weeks ago"
                        modified:
                          type: "string"
                          example: "2024-12-26T03:38:09+00:00"
                        modified_in_words:
                          type: "string"
                          example: "3 weeks ago"
                        twitter:
                          type: "string"
                          example: ""
                        facebook:
                          type: "string"
                          example: ""
                        youtube:
                          type: "string"
                          example: ""
                        google_plus:
                          type: "string"
                          example: ""
                        linkedin:
                          type: "string"
                          example: ""
                        t_c_title:
                          type: "string"
                          example: ""
                        t_c_content:
                          type: "string"
                          example: ""
                        suffix:
                          type: "string"
                          example: ""
                        suffix_permanent_users:
                          type: "boolean"
                          example: false
                        suffix_vouchers:
                          type: "boolean"
                          example: false
                        suffix_devices:
                          type: "boolean"
                          example: false
                        update:
                          type: "boolean"
                          example: true
                        delete:
                          type: "boolean"
                          example: true
                required:
                  - success
                  - totalCount
                  - items
  #OK        
  /realms/add.json:
    post:
      tags:
        - "Realms API"
      summary: "Add a realm"
      operationId: "addRealm"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Name of the new realm"
                  example: "new-realm"
                phone:
                  type: string
                  description: "Phone number"
                  example: "1234567890"
                fax:
                  type: string
                  description: "Fax number"
                  example: "0987654321"
                cell:
                  type: string
                  description: "Cell phone number"
                  example: "9876543210"
                email:
                  type: string
                  description: "Email address"
                  example: "realm@example.com"
                url:
                  type: string
                  description: "URL"
                  example: "http://realm.example.com"
                street_no:
                  type: string
                  description: "Street number"
                  example: "123"
                street:
                  type: string
                  description: "Street name"
                  example: "Main St"
                town_suburb:
                  type: string
                  description: "Town or suburb"
                  example: "Downtown"
                city:
                  type: string
                  description: "City"
                  example: "Metropolis"
                country:
                  type: string
                  description: "Country"
                  example: "Countryland"
                lon:
                  type: number
                  format: float
                  description: "Longitude"
                  example: 0.0
                lat:
                  type: number
                  format: float
                  description: "Latitude"
                  example: 0.0
                token:
                  type: string
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud identifier"
                  example: 23
      responses:
        200:
          description: "Realm added successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK        
  /realms/edit.json:
    post:
      tags:
        - "Realms API"
      summary: "Edit a realm"
      operationId: "editRealm"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "ID of the realm to edit"
                  example: 24
                name:
                  type: string
                  description: "New name of the realm"
                  example: "new-realm-edited"
                suffix:
                  type: string
                  description: "Suffix"
                  example: "suffix123"
                phone:
                  type: string
                  description: "Phone number"
                  example: "1234567890"
                fax:
                  type: string
                  description: "Fax number"
                  example: "0987654321"
                cell:
                  type: string
                  description: "Cell phone number"
                  example: "9876543210"
                email:
                  type: string
                  description: "Email address"
                  example: "edited-realm@example.com"
                url:
                  type: string
                  description: "URL"
                  example: "http://edited-realm.example.com"
                street_no:
                  type: string
                  description: "Street number"
                  example: "456"
                street:
                  type: string
                  description: "Street name"
                  example: "Elm St"
                town_suburb:
                  type: string
                  description: "Town or suburb"
                  example: "Uptown"
                city:
                  type: string
                  description: "City"
                  example: "New City"
                country:
                  type: string
                  description: "Country"
                  example: "Newland"
                lon:
                  type: number
                  format: float
                  description: "Longitude"
                  example: 1.234
                lat:
                  type: number
                  format: float
                  description: "Latitude"
                  example: 2.345
                twitter:
                  type: string
                  description: "Twitter handle"
                  example: "@realmTwitter"
                facebook:
                  type: string
                  description: "Facebook profile URL"
                  example: "http://facebook.com/realm"
                youtube:
                  type: string
                  description: "YouTube channel URL"
                  example: "http://youtube.com/realm"
                google_plus:
                  type: string
                  description: "Google Plus profile URL"
                  example: "http://plus.google.com/realm"
                linkedin:
                  type: string
                  description: "LinkedIn profile URL"
                  example: "http://linkedin.com/in/realm"
                t_c_title:
                  type: string
                  description: "Terms and conditions title"
                  example: "Terms of Service"
                t_c_content:
                  type: string
                  description: "Terms and conditions content"
                  example: "These are the terms of service for the realm."
                token:
                  type: string
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud identifier"
                  example: 23
      responses:
        200:
          description: "Realm edited successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK
  /realms/delete.json:
    post:
      tags:
        - "Realms API"
      summary: "Delete a realm"
      parameters:
        - name: "token"
          in: "query"
          description: "Authentication token"
          required: true
          schema:
            type: "string"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - name: "sel_language"
          in: "query"
          description: "Selected language"
          required: true
          schema:
            type: "string"
            example: "4_4"
        - name: "cloud_id"
          in: "query"
          description: "Cloud identifier"
          required: true
          schema:
            type: "integer"
            example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 23
      responses:
        200:
          description: "Realm deleted successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK        
  /realms/list-realms-for-nas-cloud.json:
    get:
      tags:
        - "Realms API"
      summary: "List realms for NAS cloud"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: string
            example: "1737165381779"
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 25
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "List of realms for NAS cloud retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 25
                        name:
                          type: string
                          example: "new-realm-123-edited"
                        selected:
                          type: boolean
                          example: false
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Realms not found"
        500:
          description: "Internal server error"
  #OK
  /realms/update-nas-realm.json:
    post:
      tags:
        - "Realms API"
      summary: "Update NAS realm"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: string
            example: "1737165384461"
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
        - in: query
          name: realm
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 19
              name:
                type: string
                example: "neyugniat-cloud"
              selected:
                type: boolean
                example: true
      responses:
        200:
          description: "NAS realm updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "NAS realm updated successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Realm not found"
        500:
          description: "Internal server error"
  #OK        
  /realms/index-cloud.json:
    get:
      tags:
        - "Realms API"
      summary: "Retrieve a list of realms for a specific cloud"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: string
            example: "1737172006230"
        - in: query
          name: all_option
          required: true
          schema:
            type: boolean
            example: false
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 25
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully retrieved the list of realms for the cloud"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 25
                        name:
                          type: string
                          example: "new-realm-123-edited"
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        404:
          description: "No realms found for the cloud"
        500:
          description: "Internal server error"

# ==========NAS APIS===============#
  #OK
  /nas/index.json:
    get:
      tags:
        - "NAS API"
      summary: "Retrieve a list of NAS"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: string
            example: "1737165299672"
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 100
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "List of NAS retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  totalCount:
                    type: integer
                    example: 1
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 70
                        nasname:
                          type: string
                          example: "192.168.101.133"
                        shortname:
                          type: string
                          example: "Mikrotik"
                        nasidentifier:
                          type: string
                          example: ""
                        type:
                          type: string
                          example: "other"
                        ports:
                          type: string
                          nullable: true
                          example: null
                        secret:
                          type: string
                          example: "testing123"
                        server:
                          type: string
                          nullable: true
                          example: null
                        community:
                          type: string
                          nullable: true
                          example: null
                        description:
                          type: string
                          example: "RADIUS Client"
                        connection_type:
                          type: string
                          example: "direct"
                        timezone:
                          type: string
                          example: "221"
                        record_auth:
                          type: boolean
                          example: true
                        ignore_acct:
                          type: boolean
                          example: false
                        dynamic_attribute:
                          type: string
                          example: ""
                        dynamic_value:
                          type: string
                          example: ""
                        monitor:
                          type: string
                          example: "off"
                        ping_interval:
                          type: integer
                          example: 600
                        heartbeat_dead_after:
                          type: integer
                          example: 600
                        last_contact:
                          type: string
                          nullable: true
                          example: null
                        session_auto_close:
                          type: boolean
                          example: false
                        session_dead_time:
                          type: integer
                          example: 3600
                        on_public_maps:
                          type: boolean
                          example: false
                        lat:
                          type: number
                          nullable: true
                          example: null
                        lon:
                          type: number
                          nullable: true
                          example: null
                        photo_file_name:
                          type: string
                          example: "logo.png"
                        cloud_id:
                          type: integer
                          example: -1
                        created:
                          type: string
                          format: date-time
                          example: "2024-12-30T14:22:31+00:00"
                        modified:
                          type: string
                          format: date-time
                          example: "2024-12-30T14:33:32+00:00"
                        na_states:
                          type: array
                          items:
                            type: object
                          example: []
                        na_realms:
                          type: array
                          items:
                            type: object
                          example: []
                        realms:
                          type: array
                          items:
                            type: object
                          example: []
                        for_system:
                          type: boolean
                          example: true
                        update:
                          type: boolean
                          example: true
                        delete:
                          type: boolean
                          example: true
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "NAS not found"
        500:
          description: "Internal server error"
  #OK        
  /nas/add.json:
    post:
      tags:
        - "NAS API"
      summary: "Add a new NAS and associate it with one or more realms"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "25":
                  type: string
                  description: "Realm ID 25 is selected"
                  example: "true"
                nasname:
                  type: string
                  description: "The IP address of the NAS"
                  example: "123.123.123.123"
                shortname:
                  type: string
                  description: "Short name for the NAS"
                  example: "123"
                secret:
                  type: string
                  description: "The RADIUS secret for NAS"
                  example: "123"
                for_system:
                  type: string
                  description: |
                    Optional field that indicates if the NAS is associated with the system.
                    If not needed, you can omit this field. When provided, it will associate
                    the NAS with the system.
                  example: "for_system"
                  nullable: true
                  default: null
                token:
                  type: string
                  description: "The authorization token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Language selection"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud ID"
                  example: 23
      responses:
        200:
          description: "NAS added and realms associated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "NAS added and realms associated successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "NAS not found"
        500:
          description: "Internal server error"
  #OK
  /nas/view.json:
    get:
      tags:
        - "NAS API"
      summary: "View NAS details"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
        - in: query
          name: _dc
          required: true
          schema:
            type: string
            example: "1737165590272"
        - in: query
          name: nas_id
          required: true
          schema:
            type: integer
            example: 71
      responses:
        200:
          description: "NAS details retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  nas_id:
                    type: integer
                    example: 71
                  nasname:
                    type: string
                    example: "10.10.10.196"
                  shortname:
                    type: string
                    example: "new-nas"
                  secret:
                    type: string
                    example: "123"
                  status:
                    type: string
                    example: "active"
                  description:
                    type: string
                    example: "NAS details for 10.10.10.196"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "NAS not found"
        500:
          description: "Internal server error"
  #OK        
  /nas/edit.json:
    post:
      tags:
        - "NAS API"
      summary: "Edit NAS details"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud ID for the NAS"
                  example: 23
                id:
                  type: integer
                  description: "ID of the NAS to be edited"
                  example: 71
                nasname:
                  type: string
                  description: "The NAS name or IP address"
                  example: "10.10.10.196"
                shortname:
                  type: string
                  description: "Short name for the NAS"
                  example: "new-nas"
                secret:
                  type: string
                  description: "Shared secret for the NAS"
                  example: "123"
                for_system:
                  type: string
                  description: |
                    Optional field that indicates if the NAS is associated with the system.
                    If not needed, you can omit this field. When provided, it will associate
                    the NAS with the system.
                  example: "for_system"
                  nullable: true
                  default: null
                type:
                  type: string
                  description: "Type of NAS"
                  example: "other"
                monitor:
                  type: string
                  description: "Monitor status for the NAS"
                  example: "off"
                heartbeat_dead_after:
                  type: integer
                  description: "Timeout duration for NAS heartbeat"
                  example: 600
                ping_interval:
                  type: integer
                  description: "Interval for pinging NAS"
                  example: 600
                session_dead_time:
                  type: integer
                  description: "Session expiration time"
                  example: 3600
                timezone:
                  type: string
                  description: "Optional timezone for the NAS"
                  example: "UTC"
      responses:
        200:
          description: "NAS details updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "NAS updated successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "NAS not found"
        500:
          description: "Internal server error"
  #OK
  /nas/delete.json:
    post:
      tags:
        - "NAS API"
      summary: "Delete a NAS"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "ID of the NAS to be deleted"
                  example: 71
      responses:
        200:
          description: "NAS deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "NAS deleted successfully"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "NAS not found"
        500:
          description: "Internal server error"
          
# ==========Profile Components APIS===============#
  #OK
  /profile-components/index-data-view.json:
    get:
      tags:
        - "Profile Components API"
      summary: "Get profile components data view"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
            example: 1737166019179
        - in: query
          name: id
          required: false
          schema:
            type: integer
            example: 49
          description: "Optional ID of the profile component. If provided, fetches a specific component, otherwise fetches all components."
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 25
      responses:
        200:
          description: "Profile components data view fetched successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: "List of profile components"
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "49_0"
                        name:
                          type: string
                          example: "SimpleAdd_46"
                        type:
                          type: string
                          example: "profile_component"
                        profile_component_id:
                          type: integer
                          example: 49
                        for_system:
                          type: boolean
                          example: false
                        groupname:
                          type: string
                          example: "SimpleAdd_46"
                        attribute:
                          type: string
                          example: "Wireless-VLANID"
                        op:
                          type: string
                          example: ":="
                        value:
                          type: string
                          example: "1"
                        comment:
                          type: string
                          example: ""
                  success:
                    type: boolean
                    example: true
                  totalCount:
                    type: integer
                    description: "Total count of profile components"
                    example: 3
                  metaData:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 3
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK        
  /profile-components/index-combo.json:
    get:
      tags:
        - "Profile Components API"
      summary: "Get profile components combo data"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
            example: 1737165828100
        - in: query
          name: include_all_option
          required: true
          schema:
            type: boolean
            example: true
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 25
      responses:
        200:
          description: "Profile components combo data fetched successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: "List of profile components"
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 0
                        name:
                          type: string
                          example: "**All Profile Components**"
                  success:
                    type: boolean
                    description: "Indicates whether the operation was successful"
                    example: true
                  totalCount:
                    type: integer
                    description: "Total count of profile components"
                    example: 3
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK        
  /profile-components/add.json:
    post:
      tags:
        - "Profile Components API"
      summary: "Add a new profile component"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Name of the profile component"
                  example: "new-profile-component"
                for_system:
                  type: string
                  description: "Indicates if the profile component is for the system (optional)"
                  example: "for_system"
                  nullable: true
                token:
                  type: string
                  description: "Authorization token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud ID"
                  example: 23
      responses:
        200:
          description: "Profile component added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: "Operation status"
                    example: "success"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK
  /profile-components/edit.json:
    post:
      tags:
        - "Profile Components API"
      summary: "Edit an existing profile component"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: "ID of the profile component to be edited"
                  example: "66_0"
                for_system:
                  type: string
                  description: "Indicates if the profile component is for the system (optional)"
                  example: "for_system"
                  nullable: true
                token:
                  type: string
                  description: "Authorization token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud ID"
                  example: 23
      responses:
        200:
          description: "Profile component edited successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: "Operation status"
                    example: "success"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"
  #OK
  /profile-components/delete.json:
    post:
      tags:
        - "Profile Components API"
      summary: "Delete an existing profile component"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            description: "Authorization token"
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            description: "Selected language"
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            description: "Cloud ID"
            example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: array
                  description: "List of IDs of profile components to delete"
                  items:
                    type: integer
                    example: 66
      responses:
        200:
          description: "Profile component deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: "Operation status"
                    example: "success"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Profile component not found"
        500:
          description: "Internal server error"
  #OK
  /profile-components/vendors.json:
    get:
      tags:
        - "Profile Components API"
      summary: "Fetch the list of vendors"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
            example: 1737167070049
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 25
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully fetched the list of vendors"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: "List of vendors"
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier for the vendor"
                          example: "ADSL-Forum"
                        name:
                          type: string
                          description: "Name of the vendor"
                          example: "ADSL-Forum"
                        has_number:
                          type: boolean
                          description: "Indicates whether the vendor has an associated number"
                          example: true
                        number:
                          type: string
                          nullable: true
                          description: "Optional number associated with the vendor (if applicable)"
                          example: "3561"
                required:
                  - items
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "No vendors found"
        500:
          description: "Internal server error"
  #OK        
  /profile-components/attributes.json:
    get:
      tags:
        - "Profile Components API"
      summary: "Fetch the list of attributes for a specific vendor"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
            example: 1737166448993
        - in: query
          name: vendor
          required: true
          schema:
            type: string
            example: "Mikrotik"
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 25
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully fetched the list of attributes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    description: "List of attributes"
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "Unique identifier for the attribute"
                          example: "Recv-Limit"
                        name:
                          type: string
                          description: "Name of the attribute"
                          example: "Recv-Limit"
                        number:
                          type: string
                          description: "Attribute number"
                          example: "1"
                        type:
                          type: string
                          description: "Data type of the attribute"
                          example: "integer"
                        has_tag:
                          type: boolean
                          description: "Indicates whether the attribute has an associated tag"
                          example: false
                required:
                  - items
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "No attributes found for the specified vendor"
        500:
          description: "Internal server error"
  #OK
  /profile-components/add-comp.json:
    post:
      tags:
        - "Profile Components API"
      summary: "Add a new profile component for a specific vendor"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_component_id:
                  type: integer
                  description: "ID of the profile component to be added"
                  example: 49
                type:
                  type: string
                  description: "Type of the profile component"
                  example: "reply"
                vendor:
                  type: string
                  description: "Vendor name"
                  example: "Mikrotik"
                attribute:
                  type: string
                  description: "Attribute name of the profile component"
                  example: "Wireless-Forward"
                op:
                  type: string
                  description: "Operator for the attribute"
                  example: ":="
                value:
                  type: string
                  description: "Value of the attribute"
                  example: "123"
                comment:
                  type: string
                  description: "Optional comment for the profile component"
                  example: "123"
                token:
                  type: string
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud ID for the profile component"
                  example: 23
              required:
                - profile_component_id
                - type
                - vendor
                - attribute
                - op
                - value
                - token
                - sel_language
                - cloud_id
      responses:
        200:
          description: "Successfully added the profile component"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: object
                    properties:
                      profile_component_id:
                        type: string
                        description: "ID of the profile component"
                        example: "49"
                      type:
                        type: string
                        description: "Type of the profile component"
                        example: "reply"
                      vendor:
                        type: string
                        description: "Vendor name"
                        example: "Mikrotik"
                      attribute:
                        type: string
                        description: "Attribute name"
                        example: "Wireless-Forward"
                      op:
                        type: string
                        description: "Operator for the attribute"
                        example: ":="
                      value:
                        type: string
                        description: "Value of the attribute"
                        example: "123"
                      comment:
                        type: string
                        description: "Comment for the profile component"
                        example: "123"
                      token:
                        type: string
                        description: "Authentication token"
                        example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                      sel_language:
                        type: string
                        description: "Selected language"
                        example: "4_4"
                      cloud_id:
                        type: string
                        description: "Cloud ID"
                        example: "23"
                      groupname:
                        type: string
                        description: "Group name"
                        example: "SimpleAdd_46"
                      id:
                        type: string
                        description: "Unique ID of the response item"
                        example: "rpl_117"
                  success:
                    type: boolean
                    description: "Indicates if the profile component was successfully added"
                    example: true
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        404:
          description: "Profile component not found"
        500:
          description: "Internal server error"
  #OK
  /profile-components/edit-comp.json:
    post:
      tags:
        - "Profile Components API"
      summary: "Edit an existing profile component"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_component_id:
                  type: integer
                  description: "ID of the profile component to be edited"
                  example: 49
                id:
                  type: string
                  description: "Unique ID of the profile component"
                  example: "rpl_105"
                groupname:
                  type: string
                  description: "Name of the group to which the component belongs"
                  example: "SimpleAdd_46"
                type:
                  type: string
                  description: "Type of the profile component"
                  example: "reply"
                vendor:
                  type: string
                  description: "Vendor name"
                  example: "Select a vendor"
                attribute:
                  type: string
                  description: "Attribute name of the profile component"
                  example: "Tunnel-Type"
                attribute_tag:
                  type: integer
                  description: "Tag of the attribute"
                  example: 0
                op:
                  type: string
                  description: "Operator for the attribute"
                  example: ":="
                value:
                  type: string
                  description: "Value of the attribute"
                  example: "VLAN"
                comment:
                  type: string
                  description: "Optional comment for the profile component"
                  example: "123"
                token:
                  type: string
                  description: "Authentication token"
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  description: "Selected language"
                  example: "4_4"
                cloud_id:
                  type: integer
                  description: "Cloud ID for the profile component"
                  example: 23
              required:
                - profile_component_id
                - id
                - groupname
                - type
                - vendor
                - attribute
                - attribute_tag
                - op
                - value
                - token
                - sel_language
                - cloud_id
      responses:
        200:
          description: "Successfully edited the profile component"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Indicates if the profile component was successfully edited"
                    example: true
                  items:
                    type: object
                    properties:
                      profile_component_id:
                        type: integer
                        description: "ID of the profile component"
                        example: 49
                      id:
                        type: string
                        description: "Unique ID of the profile component"
                        example: "rpl_104"
                      groupname:
                        type: string
                        description: "Name of the group to which the component belongs"
                        example: "SimpleAdd_46"
                      type:
                        type: string
                        description: "Type of the profile component"
                        example: "reply"
                      vendor:
                        type: string
                        description: "Vendor name"
                        example: "Select a vendor"
                      attribute:
                        type: string
                        description: "Attribute name of the profile component"
                        example: "Wireless-VLANID"
                      op:
                        type: string
                        description: "Operator for the attribute"
                        example: ":="
                      value:
                        type: string
                        description: "Value of the attribute"
                        example: "101"
                      comment:
                        type: string
                        description: "Optional comment for the profile component"
                        example: ""
                      token:
                        type: string
                        description: "Authentication token"
                        example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                      sel_language:
                        type: string
                        description: "Selected language"
                        example: "4_4"
                      cloud_id:
                        type: integer
                        description: "Cloud ID for the profile component"
                        example: 23
                required:
                  - success
                  - items
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        404:
          description: "Profile component not found"
        500:
          description: "Internal server error"
  #OK
  /profile-components/delete-comp.json:
    post:
      tags:
        - "Profile Components API"
      summary: "Delete a profile component"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "rpl_119"
      responses:
        200:
          description: "Successfully deleted the profile component"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        404:
          description: "Profile component not found"
        500:
          description: "Internal server error"
       
# ==========Permanent Users APIS===============#
  #OK
  /permanent-users/index.json:
    get:
      tags:
        - "Permanent Users API"
      summary: "Retrieve a list of permanent users"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: string
            example: "1737167289011"
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 100
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully retrieved the list of permanent users"
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    example: 6
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 41
                        username:
                          type: string
                          example: "uservlan1"
                        name:
                          type: string
                          example: ""
                        surname:
                          type: string
                          example: ""
                        address:
                          type: string
                          example: ""
                        phone:
                          type: string
                          example: ""
                        email:
                          type: string
                          example: ""
                        auth_type:
                          type: string
                          example: "sql"
                        active:
                          type: boolean
                          example: true
                        last_accept_time:
                          type: string
                          format: date-time
                          example: "2024-12-27T21:06:17+00:00"
                        last_accept_time_in_words:
                          type: string
                          example: "3 weeks ago"
                        last_reject_time:
                          type: string
                          nullable: true
                          example: null
                        last_reject_time_in_words:
                          type: string
                          example: "Never"
                        last_accept_nas:
                          type: string
                          example: "MikroTik"
                        last_reject_nas:
                          type: string
                          nullable: true
                          example: null
                        last_reject_message:
                          type: string
                          nullable: true
                          example: null
                        perc_time_used:
                          type: number
                          nullable: true
                          example: null
                        perc_data_used:
                          type: number
                          nullable: true
                          example: null
                        data_used:
                          type: number
                          nullable: true
                          example: null
                        data_cap:
                          type: number
                          nullable: true
                          example: null
                        time_used:
                          type: number
                          nullable: true
                          example: null
                        time_cap:
                          type: number
                          nullable: true
                          example: null
                        time_cap_type:
                          type: string
                          example: "soft"
                        data_cap_type:
                          type: string
                          example: "soft"
                        realm:
                          type: string
                          example: "test.com"
                        realm_id:
                          type: integer
                          example: 20
                        profile:
                          type: string
                          example: "WLAN_10-edited"
                        profile_id:
                          type: integer
                          example: 53
                        from_date:
                          type: string
                          nullable: true
                          example: null
                        to_date:
                          type: string
                          nullable: true
                          example: null
                        track_auth:
                          type: boolean
                          example: false
                        track_acct:
                          type: boolean
                          example: true
                        static_ip:
                          type: string
                          example: ""
                        extra_name:
                          type: string
                          example: ""
                        extra_value:
                          type: string
                          example: ""
                        country_id:
                          type: integer
                          example: 4
                        language_id:
                          type: integer
                          example: 4
                        cloud_id:
                          type: integer
                          example: 23
                        created:
                          type: string
                          format: date-time
                          example: "2024-12-27T14:04:52+00:00"
                        created_in_words:
                          type: string
                          example: "3 weeks ago"
                        modified:
                          type: string
                          format: date-time
                          example: "2024-12-27T14:04:52+00:00"
                        modified_in_words:
                          type: string
                          example: "3 weeks ago"
                        site:
                          type: string
                          example: ""
                        ppsk:
                          type: string
                          example: ""
                        realm_vlan_id:
                          type: integer
                          example: 0
                        session_limit:
                          type: integer
                          example: 0
                        last_seen:
                          type: object
                          properties:
                            status:
                              type: string
                              example: "offline"
                            span:
                              type: string
                              example: "3 weeks"
                        framedipaddress:
                          type: string
                          example: "10.10.10.194"
                        update:
                          type: boolean
                          example: true
                        delete:
                          type: boolean
                          example: true
                        extra:
                          type: boolean
                          example: true
                        vlan:
                          type: string
                          example: "Default VLAN"
                  metaData:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 6
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        404:
          description: "No permanent users found"
        500:
          description: "Internal server error"
  #OK        
  /permanent-users/add.json:
    post:
      tags:
        - "Permanent Users API"
      summary: "Add a new permanent user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "new-user"
                password:
                  type: string
                  example: "123"
                realm_id:
                  type: integer
                  example: 19
                profile_id:
                  type: integer
                  example: 59
                name:
                  type: string
                  example: ""
                surname:
                  type: string
                  example: ""
                language:
                  type: string
                  example: "4_4"
                phone:
                  type: string
                  example: ""
                email:
                  type: string
                  example: ""
                address:
                  type: string
                  example: ""
                active:
                  type: string
                  enum: ["active", "inactive"]
                  example: "active"
                always_active:
                  type: string
                  enum: ["always_active", "inactive"]
                  example: "always_active"
                static_ip:
                  type: string
                  example: ""
                extra_name:
                  type: string
                  example: ""
                extra_value:
                  type: string
                  example: ""
                site:
                  type: string
                  example: ""
                ppsk:
                  type: string
                  example: ""
                realm_vlan_id:
                  type: integer
                  example: 0
                token:
                  type: string
                  example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
                sel_language:
                  type: string
                  example: "4_4"
                cloud_id:
                  type: integer
                  example: 23
      responses:
        200:
          description: "Successfully added the permanent user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        example: "usermoine"
                      password:
                        type: string
                        example: "123"
                      realm_id:
                        type: integer
                        example: 25
                      profile_id:
                        type: integer
                        example: 58
                      name:
                        type: string
                        example: ""
                      surname:
                        type: string
                        example: ""
                      language:
                        type: string
                        example: "4_4"
                      phone:
                        type: string
                        example: ""
                      email:
                        type: string
                        example: ""
                      address:
                        type: string
                        example: ""
                      active:
                        type: integer
                        example: 1
                      always_active:
                        type: string
                        example: "always_active"
                      static_ip:
                        type: string
                        example: ""
                      extra_name:
                        type: string
                        example: ""
                      extra_value:
                        type: string
                        example: ""
                      site:
                        type: string
                        example: ""
                      ppsk:
                        type: string
                        example: ""
                      realm_vlan_id:
                        type: string
                        example: "0"
                      token:
                        type: string
                        example: ""
                      sel_language:
                        type: string
                        example: "4_4"
                      cloud_id:
                        type: integer
                        example: 23
                      language_id:
                        type: integer
                        example: 4
                      country_id:
                        type: integer
                        example: 4
                      realm:
                        type: string
                        example: "new-realm-123-edited"
                      profile:
                        type: string
                        example: "test"
                      id:
                        type: integer
                        example: 51
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK
  /permanent-users/view-personal-info.json:
    get:
      tags:
        - "Permanent Users API"
      summary: "View personal information of a permanent user"
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: integer
            example: 52
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
        - in: query
          name: _dc
          required: false
          schema:
            type: integer
            example: 1737265465491
      responses:
        200:
          description: "Successfully retrieved personal information"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: ""
                      surname:
                        type: string
                        example: ""
                      phone:
                        type: string
                        example: ""
                      address:
                        type: string
                        example: ""
                      email:
                        type: string
                        example: ""
                      language_id:
                        type: integer
                        example: 4
                      country_id:
                        type: integer
                        example: 4
                      id:
                        type: integer
                        example: 52
                      language:
                        type: string
                        example: "4_4"
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        404:
          description: "User not found"
        500:
          description: "Internal server error"
  #OK        
  /permanent-users/private-attr-index.json:
    get:
      tags:
        - "Permanent Users API"
      summary: "Retrieve private user attributes"
      parameters:
        - in: query
          name: username
          required: true
          schema:
            type: string
            example: "new-user"
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 150
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully retrieved the data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "chk_10710"
                        type:
                          type: string
                          example: "check"
                        attribute:
                          type: string
                          example: "User-Profile"
                        op:
                          type: string
                          example: ":="
                        value:
                          type: string
                          example: "test"
                        edit:
                          type: boolean
                          example: false
                        delete:
                          type: boolean
                          example: false
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK        
  /radpostauths/index.json:
    get:
      tags:
        - "Radpostauths API"
      summary: "Get the Radpostauths data"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
            example: "1737265465491"
        - in: query
          name: username
          required: true
          schema:
            type: string
            example: "new-user@neyugniat-cloud"
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 150
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully retrieved the data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          example: "new-user@neyugniat-cloud"
                        timestamp:
                          type: string
                          example: "2025-01-18T00:00:00Z"
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK
  /radaccts/index.json:
    get:
      tags:
        - "Radaccts API"
      summary: "Retrieve radacct records"
      parameters:
        - in: query
          name: only_connected
          required: true
          schema:
            type: boolean
            example: false
        - in: query
          name: timezone_id
          required: true
          schema:
            type: integer
            example: 221
        - in: query
          name: extra_info
          required: true
          schema:
            type: boolean
            example: false
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: start
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 150
        - in: query
          name: sort
          required: true
          schema:
            type: string
            example: "acctstarttime"
        - in: query
          name: dir
          required: true
          schema:
            type: string
            example: "DESC"
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      responses:
        200:
          description: "Successfully retrieved the radacct records"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        radacctid:
                          type: integer
                          example: 12
                        acctsessionid:
                          type: string
                          example: "80200006"
                        acctuniqueid:
                          type: string
                          example: "f8c43f0162467e9512f389ce4095ceaf"
                        username:
                          type: string
                          example: "testuser@neyugniat-cloud"
                        groupname:
                          type: string
                          example: ""
                        realm:
                          type: string
                          example: "neyugniat-cloud"
                        nasipaddress:
                          type: string
                          example: "192.168.0.175"
                        nasidentifier:
                          type: string
                          example: "MikroTik"
                        nasportid:
                          type: string
                          example: "ether2-LAN-DHCP"
                        nasporttype:
                          type: string
                          example: "Wireless-802.11"
                        acctstarttime:
                          type: string
                          example: "2024-12-17 15:12:51"
                        acctupdatetime:
                          type: string
                          example: "2024-12-17T08:12:51+00:00"
                        acctstoptime:
                          type: string
                          example: "2024-12-17 16:03:18"
                        acctsessiontime:
                          type: integer
                          example: 3028
                        acctinputoctets:
                          type: integer
                          example: 5987328
                        acctoutputoctets:
                          type: integer
                          example: 116463263
                        calledstationid:
                          type: string
                          example: "hotspot1"
                        callingstationid:
                          type: string
                          example: "00-0C-29-1E-AC-B0"
                        acctterminatecause:
                          type: string
                          example: "Lost-Service"
                        framedipaddress:
                          type: string
                          example: "192.168.2.200"
                        active:
                          type: boolean
                          example: false
                        user_type:
                          type: string
                          example: "unknown"
                  totalCount:
                    type: integer
                    example: 155
                  totalIn:
                    type: integer
                    example: 0
                  totalOut:
                    type: integer
                    example: 0
                  totalInOut:
                    type: integer
                    example: 0
                  metaData:
                    type: object
                    properties:
                      totalIn:
                        type: integer
                        example: 0
                      totalOut:
                        type: integer
                        example: 0
                      totalInOut:
                        type: integer
                        example: 0
                      totalCount:
                        type: integer
                        example: 155
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK  
  /permanent-users/private-attr-add.json:
    post:
      tags:
        - "Permanent Users API"
      summary: "Add or update a permanent user's private attribute"
      parameters:
        - in: query
          name: username
          required: true
          schema:
            type: string
            example: "new-user"
        - in: query
          name: token
          required: true
          schema:
            type: string
            example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
            example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
            example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attribute:
                  type: string
                  example: "Client-Id"
                delete:
                  type: boolean
                  example: true
                edit:
                  type: boolean
                  example: true
                id:
                  type: string
                  example: "Rd.model.mPrivateAttribute-1"
                op:
                  type: string
                  example: ":="
                type:
                  type: string
                  example: "check"
                value:
                  type: string
                  example: "Replace this value"
      responses:
        200:
          description: "Successfully added or updated the permanent user's private attribute"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "check"
                      attribute:
                        type: string
                        example: "Client-Id"
                      op:
                        type: string
                        example: ":="
                      value:
                        type: string
                        example: "Replace this value"
                      delete:
                        type: boolean
                        example: true
                      edit:
                        type: boolean
                        example: true
                      id:
                        type: integer
                        example: 10715
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK
  /permanent-users/private-attr-edit.json:
    post:
      tags:
        - "Permanent Users API"
      summary: "Edit private attributes for permanent users"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
          example: 1737167975303
        - in: query
          name: username
          required: true
          schema:
            type: string
          example: "new-user@neyugniat-cloud"
        - in: query
          name: token
          required: true
          schema:
            type: string
          example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
          example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
          example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: "The type of the private attribute"
                  example: "check"
                attribute:
                  type: string
                  description: "The name of the attribute"
                  example: "Client-Id"
                op:
                  type: string
                  description: "The operator for attribute comparison"
                  example: ":="
                value:
                  type: string
                  description: "The value of the attribute"
                  example: "50"
                delete:
                  type: boolean
                  description: "Whether to delete the attribute (true/false)"
                  example: true
                edit:
                  type: boolean
                  description: "Whether the attribute is editable (true/false)"
                  example: true
                id:
                  type: string
                  description: "The unique ID of the private attribute"
                  example: "chk_10717"
      responses:
        200:
          description: "Successfully edited the private attribute"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Private attribute updated successfully."
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        example: "new-user@neyugniat-cloud"
                      attribute:
                        type: string
                        example: "Tunnel-Type"
                      value:
                        type: string
                        example: "50"
                      edit:
                        type: boolean
                        example: true
                      delete:
                        type: boolean
                        example: true
                      id:
                        type: string
                        example: "10704"
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK
  /permanent-users/private-attr-delete.json:
    post:
      tags:
        - "Permanent Users API"
      summary: "Delete private attributes for permanent users"
      parameters:
        - in: query
          name: _dc
          required: true
          schema:
            type: integer
          example: 1737168157078
        - in: query
          name: username
          required: true
          schema:
            type: string
          example: "new-user"
        - in: query
          name: token
          required: true
          schema:
            type: string
          example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
          example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
          example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: "The unique ID of the private attribute"
                  example: "chk_10704"
                type:
                  type: string
                  description: "The type of the private attribute"
                  example: "check"
                attribute:
                  type: string
                  description: "The name of the attribute"
                  example: "Tunnel-Type"
                op:
                  type: string
                  description: "The operator for attribute comparison"
                  example: ":="
                value:
                  type: string
                  description: "The value of the attribute"
                  example: "50"
                edit:
                  type: boolean
                  description: "Whether the attribute is editable"
                  example: true
                delete:
                  type: boolean
                  description: "Whether to delete the attribute"
                  example: true
      responses:
        200:
          description: "Successfully deleted the private attribute"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"
  #OK
  /permanent-users/delete.json:
    post:
      tags:
        - "Permanent Users API"
      summary: "Delete permanent users"
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          example: "b4c6ac81-8c7c-4802-b50a-0a6380555b50"
        - in: query
          name: sel_language
          required: true
          schema:
            type: string
          example: "4_4"
        - in: query
          name: cloud_id
          required: true
          schema:
            type: integer
          example: 23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: "The unique ID of the permanent user to delete"
                    example: 50
      responses:
        200:
          description: "Successfully deleted the permanent user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Permanent user deleted successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 50
                        status:
                          type: string
                          example: "deleted"
        400:
          description: "Bad request, invalid parameters"
        401:
          description: "Unauthorized, invalid or missing token"
        500:
          description: "Internal server error"

  

        
          
          
          
          
          
          
          
          
          
          
